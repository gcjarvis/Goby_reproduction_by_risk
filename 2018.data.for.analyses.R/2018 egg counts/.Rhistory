summarize(Density = mean(Density))#or you can name it the same thing as before - they give the same result
den.per.week
########going to work with density now
#want to get a df that has average density by week
den.per.week<-density %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(Density = round(mean(Density)))#or you can name it the same thing as before - they give the same result
den.per.week
########going to work with density now
#want to get a df that has average density by week
den.per.week<-density %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(Density = ceiling(mean(Density)))#or you can name it the same thing as before - they give the same result
den.per.week
########going to work with density now
#want to get a df that has average density by week
den.per.week<-density %>%
group_by(Trial,Reef,Week,Day,Treatment) %>%
summarize(Density = ceiling(mean(Density)))#or you can name it the same thing as before - they give the same result
den.per.week
#this version includes information about BEG
density<-read.csv("C:\\Users\\George\\Desktop\\2018 summer\\2018 Goby\\2018 data for analyses, R\\2018 densities\\Data//density.12.4.18.messing.withR.deleted.BEG.info.csv)
#this version includes information about BEG
density<-read.csv("C:\\Users\\George\\Desktop\\2018 summer\\2018 Goby\\2018 data for analyses, R\\2018 densities\\Data//density.12.4.18.csv")
density<-read.csv("C:\\Users\\George\\Desktop\\2018 summer\\2018 Goby\\2018 data for analyses, R\\2018 densities\\Data//density.12.4.18.csv")
den.per.week<-density %>%
group_by(Trial,Reef,Week,Day,Treatment) %>%
summarize(Density = ceiling(mean(Density)))#or you can name it the same thing as before - they give the same result
View(den.per.week)
View(density)
#this version includes information about BEG
density<-read.csv("C:\\Users\\George\\Desktop\\2018 summer\\2018 Goby\\2018 data for analyses, R\\2018 densities\\Data//density.12.4.18.messing.withR.deleted.BEG.info.csv")
density<-read.csv("C:\\Users\\George\\Desktop\\2018 summer\\2018 Goby\\2018 data for analyses, R\\2018 densities\\Data//density.12.4.18.csv")
#this version includes information about BEG
density<-read.csv("C:\\Users\\George\\Desktop\\2018 summer\\2018 Goby\\2018 data for analyses, R\\2018 densities\\Data//density.12.4.18.messing.withR.deleted.BEG.info.csv")
########going to work with density now
#want to get a df that has average density by week
#wanted to get the average density per reef per week (mean(x)),
#but I also wanted to round up to the nearest whole number (ceiling(x))
den.per.week<-density %>%
group_by(Trial,Reef,Week,Day,Treatment) %>%
summarize(Density = ceiling(mean(Density)))#or you can name it the same thing as before - they give the same result
View(density)
View(de.per.week)
View(den.per.week)
egg.per.week<-gob.sub %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(eggs.per.reef = sum(Egg.count))
egg.per.week<-gob.sub %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(Egg.count = sum(Egg.count))
egg.per.week
left_join(egg.per.week,den.per.week,by=c("Trial","Week","Day","Reef","Treatment"))
left_join(egg.per.week,den.per.week,by=c("Trial","Week","Reef","Treatment"))
egg.per.week<-gob.sub %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(Egg.count = sum(Egg.count))
den.per.week<-density %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(Density = ceiling(mean(Density)))
left_join(egg.per.week,den.per.week,by=c("Trial","Week","Reef","Treatment"))
den.and.egg<-left_join(egg.per.week,den.per.week,by=c("Trial","Week","Reef","Treatment"))
den.avg.egg<-mutate(den.and.egg,per.capita.repro=Egg.count/Density)
den.avg.egg
View(den.avg.egg)
density<-read.csv("C:\\Users\\George\\Desktop\\2018 summer\\2018 Goby\\2018 data for analyses, R\\2018 densities\\Data//density.12.4.18.csv")
den.per.week<-density %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(Density = ceiling(mean(Density)))
left_join(gob.sub,density,by=c("Trial","Week","Day","Reef","Treatment"))
egg.per.week<-gob.sub %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(Egg.count = sum(Egg.count))
den.per.week<-density %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(Density = ceiling(mean(Density)))
den.and.egg<-left_join(egg.per.week,den.per.week,by=c("Trial","Week","Reef","Treatment"))
#left_join(density,gob.sub,by="Egg.count")
den.avg.egg<-mutate(den.and.egg,per.capita.repro=Egg.count/Density)
den.avg.egg
den.avg.egg$Week<-as.factor(den.avg.egg$Week)
den.avg.egg
bargraph.CI(x.factor = Week, response = per.capita.repro, group= Treatment, legend=TRUE, main="eggs", data = den.avg.egg)
#low reproduction in weeks 1 and 3, but it ramps up in weeks 2 and 4, similar trends that I saw in summer 1
bargraph.CI(x.factor = Treatment, response = per.capita.repro, main="eggs", data = den.avg.egg)# low, med, then high, althgugh likely
#order treatments
den.avg.egg$Treatment<-ordered(den.avg.egg$Treatment,levels=c("Low","Medium","High"))
bargraph.CI(x.factor = Week, response = per.capita.repro, group= Treatment, legend=TRUE, main="eggs", data = den.avg.egg)
#low reproduction in weeks 1 and 3, but it ramps up in weeks 2 and 4, similar trends that I saw in summer 1
bargraph.CI(x.factor = Treatment, response = per.capita.repro, main="eggs", data = den.avg.egg)# low, med, then high, althgugh likely
#highest per capita output in high risk trt
bargraph.CI(x.factor = Week, response = per.capita.repro, main="eggs", data = den.avg.egg) #reproduction decreases over time
rm(list=ls())
library(sciplot)
library(lme4)
library(car)
library(lmerTest)
library(dplyr)
library(ggplot2)
gob.sub<-read.csv("Data/List of nests to count.1.10.19.csv")
egg.per.week<-gob.sub %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(Egg.count = sum(Egg.count))
gob.sub<-read.csv("Data/List of nests to count.1.10.19.csv")
egg.per.week<-gob.sub %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(Egg.count = sum(Egg.count))
egg.per.week<-gob.sub %>%
group_by(Trial,Reef,Week,Treatment)
summarize(Egg.count = sum(Egg.count))
egg.per.week<-gob.sub %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(Egg.count = sum(gob.sub$Egg.count))
egg.per.week<-gob.sub %>%
group_by(Trial,Reef,Week,Treatment)
egg.per.week
gob.sub$Week<-as.factor(gob.sub$Week)
gob.sub$Treatment<-ordered(gob.sub$Treatment,levels=c("Low","Medium","High"))
egg.per.week<-gob.sub %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(Egg.count = sum(gob.sub$Egg.count))
gob.sub<-read.csv("Data/List of nests to count.1.10.19.csv")
egg.per.week<-gob.sub %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(Egg.count = sum(gob.sub$Egg.count))
gob.sub<-read.csv("Data/List of nests to count.12.15.18.csv")
gob.sub$Week<-as.factor(gob.sub$Week)
gob.sub$Treatment<-ordered(gob.sub$Treatment,levels=c("Low","Medium","High"))
egg.per.week<-gob.sub %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(eggs.per.reef = sum(Egg.count))
egg.per.week
gob.sub<-read.csv("Data/List of nests to count.1.10.19.csv")
egg.per.week<-gob.sub %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(Egg.count = sum(Egg.count))
gob.sub<-read.csv("Data/List of nests to count.1.10.19.csv")
bargraph.CI(x.factor = Week, response = Egg.count, group= Treatment, legend=TRUE, main="eggs", data = gob.sub)
gob.sub<-read.csv("Data/List of nests to count.1.10.19.csv")
gob.sub$Week<-as.factor(gob.sub$Week)
gob.sub$Treatment<-ordered(gob.sub$Treatment,levels=c("Low","Medium","High"))
bargraph.CI(x.factor = Week, response = Egg.count, group= Treatment, legend=TRUE, main="eggs", data = gob.sub)
gob.sub$Treatment<-ordered(gob.sub$Treatment,levels=c("Low","Medium","High","Control"))
bargraph.CI(x.factor = Week, response = Egg.count, group= Treatment, legend=TRUE, main="eggs", data = gob.sub)
gob.sub<-read.csv("Data/List of nests to count.1.10.19.csv")
gob.sub$Week<-as.factor(gob.sub$Week)
gob.sub$Treatment<-ordered(gob.sub$Treatment,levels=c("Low","Medium","High","Control"))
bargraph.CI(x.factor = Week, response = Egg.count, group= Treatment, legend=TRUE, main="eggs", data = gob.sub)
bargraph.CI(x.factor = Treatment, response = Egg.count, group= Week, legend=TRUE, main="eggs", data = gob.sub)
bargraph.CI(x.factor = Treatment, response = Egg.count, legend=TRUE, main="eggs", data = gob.sub)
bargraph.CI(x.factor = Week, response = Egg.count, group= Treatment, legend=TRUE, main="all trials", data = gob.sub)
bargraph.CI(x.factor = Treatment, response = Egg.count, group= Week, legend=TRUE, main="eggs", data = gob.sub)
bargraph.CI(x.factor = Treatment, response = Egg.count, group= Week, legend=TRUE, main="eggs by treatment", data = gob.sub)
bargraph.CI(x.factor = Treatment, response = Egg.count, legend=TRUE, main="eggs by treatment, no time", data = gob.sub)
#Clear the environment
rm(list=ls())
#Import the data.
#We'll use our old friend, the SnailData as an example
mydata <- read.csv("Data/SnailData (1).csv")
View(mydata)
#I find NA's hard to deal with some regression plots, so I'm just going to get rid
#of that NA right up front
mydata<-mydata[-26,]
model1<-lm(Weight~Length, data=mydata, na.action="na.omit")
#Before we look at the results, let's test the assumptions of the model
#We can call the residuals of the model as:
resid(model1) #better to name these as something
model1res<-resid(model1)
#Now we can test the normality of the residuals
library(car)
qqp(model1res, "norm")
#We can also call the fitted y values as:
fitted(model1)
#To test for homogeneity of variance, we want to plot the fitted (predicted) values
#against the residuals
plot(model1res~fitted(model1))
#A shortcut to doing all of the above.
plot(model1) #gives plots that show normality, homogeneity of variance, and potential outliers
summary(model1)
#Ideally we would do this as a Model II regression, especially if we're interested in knowing
#the true estimate of the slope. Model II is appropriate because we have error in our measures
#of both x and y.
library(lmodel2)
install.packages("lmodel2")
#Ideally we would do this as a Model II regression, especially if we're interested in knowing
#the true estimate of the slope. Model II is appropriate because we have error in our measures
#of both x and y.
library(lmodel2)
model2<-lmodel2(Weight~Length, range.y="relative", range.x="relative", data=mydata, nperm=99)
model2
#how to make plot
#There are lots of options to add on here (see Using base Plot code)
#In the simplest form:
plot(Weight~Length, data=mydata, col="blue", ylab="Weight (mg)", xlab="Length (cm)")
abline(model1, col="blue") #adds fit from the model
#want to add confidence intervals to the regression line?
prd<-predict(model1, interval="confidence")
#the above gives a table with predicted values and upper and lower confidence intervals
lines(mydata$Length, prd[,2], lty=2) #adds lower CL
lines(mydata$Length, prd[,3], lty=2) #adds upper CL
#I didn't like these funky lines, which seems to be fixed by making
#a new x variable that is more finely grained. So try this
newx<-seq(min(mydata$Length), max(mydata$Length), 0.1)
newpredict<-predict(model1, newdata=data.frame(Length=newx), interval="confidence")
plot(Weight~Length, data=mydata, col="blue", ylab="Weight (mg)", xlab="Length (cm)")
abline(model1, col="blue")
lines(newx, newpredict[,2], lty=2)
lines(newx, newpredict[,3], lty=2)
#Or you could also do this with ggplot
#If you find that far too clunky, then use ggplot:
library(ggplot2)
ggplot(mydata, aes(x=Length, y=Weight))+
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank()) +
geom_point(shape=1) +
guides(fill=FALSE) +
ylab("Weight (mg)") +
xlab("Length (cm)") +
geom_smooth(method="lm")
gob.sub<-read.csv("Data/List of nests to count.12.15.18.csv")
density<-read.csv("C:\\Users\\George\\Desktop\\2018 summer\\2018 Goby\\2018 data for analyses, R\\2018 densities\\Data//density.12.4.18.csv")
gob.sub$Week<-as.factor(gob.sub$Week)
gob.sub$Treatment<-ordered(gob.sub$Treatment,levels=c("Low","Medium","High"))
bargraph.CI(x.factor = Week, response = Egg.count, group= Treatment, legend=TRUE, main="eggs", data = gob.sub)
library(sciplot)
library(lme4)
library(car)
library(lmerTest)
library(dplyr)
library(ggplot2)
gob.sub$Week<-as.factor(gob.sub$Week)
gob.sub$Treatment<-ordered(gob.sub$Treatment,levels=c("Low","Medium","High"))
bargraph.CI(x.factor = Week, response = Egg.count, group= Treatment, legend=TRUE, main="eggs", data = gob.sub)
egg.per.week<-gob.sub %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(eggs.per.reef = sum(Egg.count))#you can name the summarized variable something different
left_join(gob.sub,density,by=c("Trial","Week","Day","Reef","Treatment"))
egg.per.week
gob.sub<-read.csv("Data/List of nests to count.12.15.18.csv")
density<-read.csv("C:\\Users\\George\\Desktop\\2018 summer\\2018 Goby\\2018 data for analyses, R\\2018 densities\\Data//density.12.4.18.csv")
egg.per.week<-gob.sub %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(Egg.count = sum(Egg.count))#or you can name it the same thing as before - they give the same result
left_join(gob.sub,density,by=c("Trial","Week","Day","Reef","Treatment"))
m.count.den1<-inner_join(gob.sub,density,by=c("Trial","Week","Day","Reef","Treatment"))#this worked, and it put the same value
View(gob.sub)
View(density)
#gob.sub<-read.csv("Data/List of nests to count.12.15.18.csv") #just trials 4 and 5, no controal treatment
gob.sub<-read.csv("Data/List of nests to count.1.13.19.csv")
#subsetting these data to only reflect trials 4-6
gob.sub.46<-gob.sub[gob.sub$Trial>3, c("Trial","Week", "Reef", "Egg.count")]
#subsetting these data to only reflect trials 4-6
gob.sub.46<-gob.sub[gob.sub$Trial>3, c("Trial","Week", "Reef","Treatment", "Egg.count")]
gob.sub.46<as.factor(gob.sub.46$Week)
gob.sub.46<as.factor(gob.sub.46$Week))
gob.sub.46<-as.factor(gob.sub.46$Week)
gob.sub.46<-gob.sub.46$Treatment<-ordered(gob.sub.46$Treatment,levels=c("Low","Medium","High","Control"))
gob.sub.46$Treatment<-ordered(gob.sub.46$Treatment,levels=c("Low","Medium","High","Control"))
#subsetting these data to only reflect trials 4-6
gob.sub.46<-gob.sub[gob.sub$Trial>3, c("Trial","Week", "Reef","Treatment", "Egg.count")]
gob.sub.46$Week<-as.factor(gob.sub.46$Week)
gob.sub.46$Treatment<-ordered(gob.sub.46$Treatment,levels=c("Low","Medium","High","Control"))
density<-read.csv("C:\\Users\\George\\Desktop\\2018 summer\\2018 Goby\\2018 data for analyses, R\\2018 densities\\Data//density.12.4.18.csv")
density$Week<-as.factor(density$Week)
density$Treatment<-ordered(density$Treatment,levels=c("Low","Medium","High","Control"))
m.count.den1<-inner_join(gob.sub,density,by=c("Trial","Week","Day","Reef","Treatment"))#this worked, and it put the same value
#going to combine trials 4 through 6 with density values for these same trials
m.count.den1<-inner_join(gob.sub.46,density,by=c("Trial","Week","Day","Reef","Treatment"))#this worked, and it put the same value
#averaging densities by week
den.per.week<-density %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(Density = ceiling(mean(Density)))
den.per.week
#gob.sub<-read.csv("Data/List of nests to count.12.15.18.csv") #just trials 4 and 5, no controal treatment
gob.sub<-read.csv("Data/List of nests to count.1.13.19.csv")
#density<-read.csv("C:\\Users\\George\\Desktop\\2018 summer\\2018 Goby\\2018 data for analyses, R\\2018 densities\\Data//density.12.4.18.csv")
density<-read.csv("C:\\Users\\George\\Desktop\\2018 summer\\2018 Goby\\2018 data for analyses, R\\2018 densities\\Data//density.1.14.19.csv")
egg.per.week<-gob.sub %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(Egg.count = sum(Egg.count))#or you can name it the same thing as before - they give the same result
egg.per.week
m.count.den<-inner_join(gob.sub,density,by=c("Trial","Week","Day","Reef","Treatment"))#this worked, and it put the same value
rm(list=ls())
#gob.sub<-read.csv("Data/List of nests to count.12.15.18.csv") #just trials 4 and 5, no controal treatment
gob.sub<-read.csv("Data/List of nests to count.1.13.19.csv")
#density<-read.csv("C:\\Users\\George\\Desktop\\2018 summer\\2018 Goby\\2018 data for analyses, R\\2018 densities\\Data//density.12.4.18.csv")
density<-read.csv("C:\\Users\\George\\Desktop\\2018 summer\\2018 Goby\\2018 data for analyses, R\\2018 densities\\Data//density.1.14.19.csv")
density$Day<-as.factor(density$Day)
egg.per.week<-gob.sub %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(Egg.count = sum(Egg.count))#or you can name it the same thing as before - they give the same result
m.count.den<-inner_join(gob.sub,density,by=c("Trial","Week","Day","Reef","Treatment"))#this worked, and it put the same value
egg.per.week<-m.count.den %>%
group_by(Trial,Reef,Week,Treatment,Density) %>%
summarize(eggs.per.reef = sum(Egg.count))
egg.per.week
View(egg.per.week)
#gob.sub<-read.csv("Data/List of nests to count.12.15.18.csv") #just trials 4 and 5, no controal treatment
gob.sub<-read.csv("Data/List of nests to count.1.13.19.csv")
View(gob.sub)
egg.per.week<-gob.sub %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(Egg.count = sum(Egg.count))
egg.per.week
m.count.den<-inner_join(gob.sub,density,by=c("Trial","Week","Day","Reef","Treatment"))#this worked, and it put the same value
egg.per.week<-m.count.den %>%
group_by(Trial,Reef,Week,Treatment,Density) %>%
summarize(eggs.per.reef = sum(Egg.count))
egg.per.week
View(egg.per.week)
egg.per.week<-gob.sub %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(Egg.count = sum(Egg.count))
egg.per.week
m.count.den
egg.per.week<-m.count.den %>%
group_by(Trial,Reef,Week,Treatment,Density) %>%
summarize(eggs.per.reef = sum(Egg.count))
egg.per.week
rm(list=ls())
library(sciplot)
library(lme4)
library(car)
library(lmerTest)
library(dplyr)
library(ggplot2)
gob.sub<-read.csv("Data/List of nests to count.1.10.19.csv")
density<-read.csv("C:\\Users\\George\\Desktop\\2018 summer\\2018 Goby\\2018 data for analyses, R\\2018 densities\\Data//density.1.14.19.csv")
density$Day<-as.factor(density$Day)
egg.per.week<-gob.sub %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(Egg.count = sum(Egg.count))
den.per.week<-density %>%
group_by(Trial,Reef,Week,Treatment) %>%
summarize(Density = ceiling(mean(Density)))
#now want to join the two df's
den.and.egg<-left_join(egg.per.week,den.per.week,by=c("Trial","Week","Reef","Treatment"))
den.and.egg
View(den.and.egg)
#now going to calculate per capita output by dividing total egg count by density
den.avg.egg<-mutate(den.and.egg,per.capita.repro=Egg.count/Density)
den.avg.egg
View(den.avg.egg)
#order treatments
den.avg.egg$Treatment<-ordered(den.avg.egg$Treatment,levels=c("Low","Medium","High","Control"))
#store week as a factor for analyses
den.avg.egg$Week<-as.factor(den.avg.egg$Week)
#store trial as a factor for analyses
den.avg.egg$Trialk<-as.factor(den.avg.egg$Trial)
#store trial as a factor for analyses
den.avg.egg$Trial<-as.factor(den.avg.egg$Trial)
#now going to calculate per capita output by dividing total egg count by density
den.avg.egg<-mutate(den.and.egg,per.capita.repro=Egg.count/Density)
#order treatments
den.avg.egg$Treatment<-ordered(den.avg.egg$Treatment,levels=c("Low","Medium","High","Control"))
#store week as a factor for analyses
den.avg.egg$Week<-as.factor(den.avg.egg$Week)
#store trial as a factor for analyses
den.avg.egg$Trial<-as.factor(den.avg.egg$Trial)
den.avg.egg
df<-den.avg.egg
#now that we have our df set up, we can go through model selection
mod1<-lm(Egg.count~Treatment, data=df)
hist(resid(mod1))
anova(mod1)
mod2<-lm(Egg.count~Treatment*Week, data=df)#looks like the best model
hist(resid(mod2))
hist(resid(mod2))
qqnorm(resid(mod2))
qqline(resid(mod2))
anova(mod2)
summary(mod2)
mod3<-lm(Egg.count~Treatment*Week*Density)
mod3<-lm(Egg.count~Treatment*Week*Density)
mod3<-lm(Egg.count~Treatment*Week*Density, data=df)
hist(resid(mod3))
qqnorm(resid(mod3))
qqline(resid(mod3))
anova(mod3)
anova(mod1,mod2,mod3)
plot(mod3)
mod4<-lmer(Egg.count~Treatment*Week*Density+(1|Trial), data=df)
mod4<-lme(Egg.count~Treatment*Week*Density+(1|Trial), data=df)
mod4<-lmer(Egg.count~Treatment*Week*Density+(1|Trial), data=df)
hist(resid(mod4))
qqnorm(resid(mod4)
qqnorm(resid(mod4))
qqling(resid(mod4))
qqline(resid(mod4))
plot(mod4)
mod5<-glmer(Egg.count~Treatment*Week*Density+(1|Trial),family="poiss",data=df)
mod5<-glmer(Egg.count~Treatment*Week*Density+(1|Trial),family="Poiss",data=df)
mod5<-glmer(Egg.count~Treatment*Week*Density+(1|Trial),family=poiss,data=df)
mod5<-glmer(Egg.count~Treatment*Week*Density+(1|Trial),family=poisson,data=df)
#adding column to df for log-transformed egg count data
den.avg.egg$ln.ec<-log(den.avg.egg$Egg.count)
df<-den.avg.egg
#log egg counts
mod1log<-lm(ln.ec~Treatment, data=df)#not normal
#adding column to df for log-transformed egg count data
den.avg.egg$ln.ec<-log(den.avg.egg$Egg.count+1)
#log egg counts
mod1log<-lm(ln.ec~Treatment, data=df)#not normal
df<-den.avg.egg
#log egg counts
mod1log<-lm(ln.ec~Treatment, data=df)#not normal
hist(resid(mod1log))
anova(mod1log)
#log
mod2log<-lm(log.ec~Treatment*Week, data=df)#more normal, but still not great
#log
mod2log<-lm(ln.ec~Treatment*Week, data=df)#more normal, but still not great
hist(resid(mod2log))
qqnorm(resid(mod2log))
qqline(resid(mod2log))
anova(mod2log)
summary(mod2log)
mod5<-glmer(Egg.count~Treatment*Week*Density+(1|Trial),family=poisson,data=df)
hist(resid(mod5))
qqnorm(resid(mod5))
qqline(resid(mod5))
plot(mod5)
anova(mod5)
summary(mod5)
Anova(mod5)
Anova(mod5, type="II")
Anova(mod5, type="III")
library(lmerTest)
Anova(mod5, type="III")
Anova(mod5, type="II")
summary(mod5)
fixef(mod5)
ranef(mod5)
aov(mod5)
Anova(mod5)
#########B: Per capita output by week###############
#now going to look at corrected metrics
mod1<-lm(per.capita.repro~Treatment, data=df)#not normal
hist(resid(mod1))
anova(mod1)
#adding column for log+1 per capita output
den.avg.egg$ln.pc<log(den.avg.eggs$per.capita.repro+1)
#adding column for log+1 per capita output
den.avg.egg$ln.pc<-log(den.avg.eggs$per.capita.repro+1)
#adding column for log+1 per capita output
den.avg.egg$ln.pc<-log(den.avg.egg$per.capita.repro+1)
df<-den.avg.egg
#log egg counts
mod1log<-lm(ln.pc~Treatment, data=df)#worse than non-logged counts!
hist(resid(mod1log))
anova(mod1log)
mod2<-lm(per.capita.repro~Treatment*Week, data=df)#more normal, but still not great
hist(resid(mod2))
qqnorm(resid(mod2))
qqline(resid(mod2))
anova(mod2)
summary(mod2)
#log
mod2log<-lm(ln.pc~Treatment*Week, data=df)#more normal, but still not great
hist(resid(mod2log))
qqnorm(resid(mod2log))
qqline(resid(mod2log))
anova(mod2log)
summary(mod2log)
mod3<-lm(pc~Treatment*Week*Density, data=df)#better fit,
mod3<-lm(ln.pc~Treatment*Week*Density, data=df)#better fit,
hist(resid(mod3))
mod3<-lm(per.capita.repro~Treatment*Week*Density, data=df)#better fit,
hist(resid(mod3))
qqnorm(resid(mod3))
qqline(resid(mod3))
hist(resid(mod2))
hist(resid(mod3))
qqnorm(resid(mod3))
qqline(resid(mod3))
anova(mod3)
anova(mod4)
mod4<-lmer(Egg.count~Treatment*Week*Density+(1|Trial), data=df)
anova(mod4)#density and
mod3<-lm(per.capita.repro~Treatment*Week*Density, data=df)#better fit,
anova(mod3) #treatment not significant here
plot(mod3)#Ok fit and normailty, but ddefinitely a shape to the variances
mod4<-lmer(per.capita.repro~Treatment*Week*Density+(1|Trial), data=df)
hist(resid(mod4))
qqnorm(resid(mod4))
qqline(resid(mod4))
plot(mod4) #best fit so far, variances still look a bit funky because of some outlying points
anova(mod4)
mod5<-glmer(per.capita.repro~Treatment*Week*Density+(1|Trial),family=poisson,data=df)
hist(resid(mod5))
qqnorm(resid(mod5))
qqline(resid(mod5))
plot(mod5)
Anova(mod5, type="II")
summary(mod5)
Anova(mod5)
mod4<-lmer(Egg.count~Treatment*Week*Density+(1|Trial), data=df)
hist(resid(mod4))
qqnorm(resid(mod4))
qqline(resid(mod4))
plot(mod4) #best fit so far, variances still look a bit funky because of some outlying points
anova(mod4)#density and week*density were sig.
mod5<-glmer(Egg.count~Treatment*Week*Density+(1|Trial),family=poisson,data=df)
hist(resid(mod5))
qqnorm(resid(mod5))
qqline(resid(mod5))
plot(mod5)
mod4<-lmer(Egg.count~Treatment*Week*Density+(1|Trial), data=df)
hist(resid(mod4))
qqnorm(resid(mod4))
qqline(resid(mod4))
plot(mod4) #best fit so far, variances still look a bit funky because of some outlying points
anova(mod4)#density and week*density were sig.
