mod1<-lmer(Count~Treatment+(1|Sex.recollected),data=df)
hist(resid(mod1))#not normal
qqnorm(resid(mod1))
qqline(resid(mod1))
hist(resid(mod1))#not normal
#importing raw data
#tried to make the .csv file not contain any NA's
reco.raw<-read.csv("Data/Recollections.all.trials.2.23.19.csv")
reco.wrang<-as.data.frame(reco.raw) %>%
tidyr::gather(key = Sex.recollected, value = Count,-Year, -Trial, -Trial.duration,-Reef,-Treatment,-Initial.size,-Final.size,-Initial.sex,-Growth,-Final.sex,
-Final.sex.female.transitional.equals.female,-final.Weight.g,-Deployment.day,-Immature)
View(reco.wrang)
View(reco.wrang)
library(sciplot)
library(lme4)
library(lmerTest)
library(car)
library(plyr)
library(dplyr)
library(ggplot2)
library(extrafont)
library(ggplot)
library(tidyr)
reco.wrang<-as.data.frame(reco.raw) %>%
tidyr::gather(key = Sex.recollected, value = Count,-Year, -Trial, -Trial.duration,-Reef,-Treatment,-Initial.size,-Final.size,-Initial.sex,-Growth,-Final.sex,
-Final.sex.female.transitional.equals.female,-final.Weight.g,-Deployment.day,-Immature)
View(reco.wrang)
#2018 trials 4-5
reco.2018.t4.5<-reco.reef[c(reco.reef$Trial>3)&(reco.reef$Trial<6),]
reco.reef<-reco.wrang %>%
group_by(Year,Trial,Reef,Treatment,Sex.recollected,Deployment.day) %>%
summarize(Count = sum(Count))
reco.reef<-reco.wrang %>%
group_by(Year,Trial,Reef,Treatment,Sex.recollected,Deployment.day) %>%
summarize(Count = sum(Count))
View(reco.reef)
reco.reef.simple<-reco.wrang %>%
group_by(Year,Trial,Reef,Treatment) %>%
summarize(Count = sum(Count))
View(reco.reef)
reco.reef.simple<-reco.wrang %>%
group_by(Year,Trial,Reef,Treatment) %>%
summarize(Count = sum(Count))
View(reco.reef.simple)
reco.reef.simple$Prop.reco<-(reco.reef.simple$Count/20)
View(reco.reef.simple)
reco.means<-with(reco.reef.simple, aggregate((Prop.reco), list(Treatment=Treatment), mean))
#now apply the se function to the 4th column [,3]
reco.means$se<-with(reco.reef.simple, aggregate((Prop.reco), list(Treatment=Treatment), function(x) sd(x)/sqrt(length(x))))[,2]
reco.means
reco.t1.2.3<-reco.reef.simple[reco.reef.simple$Trial<4,]
reco.t4.5<-reco.reef.simple[(reco.reef.simple$Trial>3) & (reco.reef.simple$Trial<6), ]
reco.t6<-reco.reef.simple[reco.reef.simple$Trial==6,]
df<-reco.t4.5
reco.means<-with(df, aggregate((Prop.reco), list(Treatment=Treatment), mean))
reco.means
#now apply the se function to the 4th column [,3]
reco.means$se<-with(df, aggregate((Prop.reco), list(Treatment=Treatment), function(x) sd(x)/sqrt(length(x))))[,2]
reco.means
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + theme(legend.position=c(0.82,0.82)) + #scale_fill_discrete(name="Sex",labels=c(" Male"," Female", " Transitional")) +
theme(legend.key.size = unit(1.3,'line')) +
theme(legend.title=element_text(size=20) , legend.text=element_text(size=18)) + scale_fill_manual(values=c("#0072B2","#D55E00","#009E73")) +
theme(axis.text.x=element_text(size=20, colour="black"),axis.text.y=element_text(size=20, colour="black"), axis.title=element_text(size=25,face="bold")) +
theme(axis.title.y = element_text(size= 25, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Proportion of Gobies Recollected")
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + theme(legend.position=c(0.82,0.82)) + scale_fill_discrete(labels=c("Low","Medium", "High")) +
theme(legend.key.size = unit(1.3,'line')) +
theme(legend.title=element_text(size=20) , legend.text=element_text(size=18)) + scale_fill_manual(values=c("#0072B2","#D55E00","#009E73")) +
theme(axis.text.x=element_text(size=20, colour="black"),axis.text.y=element_text(size=20, colour="black"), axis.title=element_text(size=25,face="bold")) +
theme(axis.title.y = element_text(size= 25, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Proportion of Gobies Recollected")
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + theme(legend.position=c(0.82,0.82)) + scale_legend_discrete(labels=c("Low","Medium", "High")) +
theme(legend.key.size = unit(1.3,'line')) +
theme(legend.title=element_text(size=20) , legend.text=element_text(size=18)) + scale_fill_manual(values=c("#0072B2","#D55E00","#009E73")) +
theme(axis.text.x=element_text(size=20, colour="black"),axis.text.y=element_text(size=20, colour="black"), axis.title=element_text(size=25,face="bold")) +
theme(axis.title.y = element_text(size= 25, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Proportion of Gobies Recollected")
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + theme(legend.position=c(0.82,0.82)) + scale_fill_discrete(labels=c("Low","Medium", "High")) +
theme(legend.key.size = unit(1.3,'line')) +
theme(legend.title=element_text(size=20) , legend.text=element_text(size=18)) + scale_fill_manual(values=c("#0072B2","#D55E00","#009E73")) +
theme(axis.text.x=element_text(size=20, colour="black"),axis.text.y=element_text(size=20, colour="black"), axis.title=element_text(size=25,face="bold")) +
theme(axis.title.y = element_text(size= 25, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Proportion of Gobies Recollected")
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + theme(legend.position=c(0.82,0.82)) + scale_fill_discrete(limits=c("Low","Medium", "High")) +
theme(legend.key.size = unit(1.3,'line')) +
theme(legend.title=element_text(size=20) , legend.text=element_text(size=18)) + scale_fill_manual(values=c("#0072B2","#D55E00","#009E73")) +
theme(axis.text.x=element_text(size=20, colour="black"),axis.text.y=element_text(size=20, colour="black"), axis.title=element_text(size=25,face="bold")) +
theme(axis.title.y = element_text(size= 25, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Proportion of Gobies Recollected")
reco.means$Treatment<-ordered(reco.means$Treatment,levels=c("Low","Medium","High"))
reco.means
reco.means$Treatment<-ordered(reco.means$Treatment,levels=c("Low","Medium","High"))
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + theme(legend.position=c(0.82,0.82)) + scale_fill_discrete(limits=c("Low","Medium", "High")) +
theme(legend.key.size = unit(1.3,'line')) +
theme(legend.title=element_text(size=20) , legend.text=element_text(size=18)) + scale_fill_manual(values=c("#0072B2","#D55E00","#009E73")) +
theme(axis.text.x=element_text(size=20, colour="black"),axis.text.y=element_text(size=20, colour="black"), axis.title=element_text(size=25,face="bold")) +
theme(axis.title.y = element_text(size= 25, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Proportion of Gobies Recollected")
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + theme(legend.position=c(0.82,0.82)) + scale_fill_discrete(limits=c("Low","Medium", "High")) +
theme(legend.key.size = unit(1.3,'line')) +
theme(legend.title=element_text(size=20) , legend.text=element_text(size=18)) + scale_fill_manual(values=c("#0072B2","#009E73","#D55E00")) +
theme(axis.text.x=element_text(size=20, colour="black"),axis.text.y=element_text(size=20, colour="black"), axis.title=element_text(size=25,face="bold")) +
theme(axis.title.y = element_text(size= 25, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Proportion of Gobies Recollected")
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + theme(legend.position=c(0.82,0.82)) + scale_fill_discrete(limits=c("Low","Medium", "High")) +
theme(legend.key.size = unit(1.3,'line')) +
theme(legend.title=element_text(size=34) , legend.text=element_text(size=18)) + scale_fill_manual(values=c("#0072B2","#009E73","#D55E00")) +
theme(axis.text.x=element_text(size=20, colour="black"),axis.text.y=element_text(size=20, colour="black"), axis.title=element_text(size=28,face="bold")) +
theme(axis.title.y = element_text(size= 28, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Proportion of Gobies Recollected")
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + theme(legend.position=c(0.82,0.82)) + scale_fill_discrete(limits=c("Low","Medium", "High")) +
theme(legend.key.size = unit(1.3,'line')) +
theme(legend.title=element_text(size=34) , legend.text=element_text(size=20)) + scale_fill_manual(values=c("#0072B2","#009E73","#D55E00")) +
theme(axis.text.x=element_text(size=20, colour="black"),axis.text.y=element_text(size=20, colour="black"), axis.title=element_text(size=28,face="bold")) +
theme(axis.title.y = element_text(size= 28, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Proportion of Gobies Recollected")
reco.means<-with(df, aggregate((Count), list(Treatment=Treatment), mean))
#now apply the se function to the 4th column [,3]
reco.means$se<-with(df, aggregate((Count), list(Treatment=Treatment), function(x) sd(x)/sqrt(length(x))))[,2]
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + theme(legend.position=c(0.82,0.82)) + scale_fill_discrete(limits=c("Low","Medium", "High")) +
theme(legend.key.size = unit(1.3,'line')) +
theme(legend.title=element_text(size=34) , legend.text=element_text(size=20)) + scale_fill_manual(values=c("#0072B2","#009E73","#D55E00")) +
theme(axis.text.x=element_text(size=20, colour="black"),axis.text.y=element_text(size=20, colour="black"), axis.title=element_text(size=28,face="bold")) +
theme(axis.title.y = element_text(size= 28, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Proportion of Gobies Recollected")
reco.means$Treatment<-ordered(reco.means$Treatment,levels=c("Low","Medium","High"))
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + theme(legend.position=c(0.82,0.82)) + scale_fill_discrete(limits=c("Low","Medium", "High")) +
theme(legend.key.size = unit(1.3,'line')) +
theme(legend.title=element_text(size=34) , legend.text=element_text(size=20)) + scale_fill_manual(values=c("#0072B2","#009E73","#D55E00")) +
theme(axis.text.x=element_text(size=20, colour="black"),axis.text.y=element_text(size=20, colour="black"), axis.title=element_text(size=28,face="bold")) +
theme(axis.title.y = element_text(size= 28, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Proportion of Gobies Recollected")
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + theme(legend.position=c(0.82,0.82)) + scale_fill_discrete(limits=c("Low","Medium", "High")) +
theme(legend.key.size = unit(1.3,'line')) +
theme(legend.title=element_text(size=34) , legend.text=element_text(size=20)) + scale_fill_manual(values=c("#0072B2","#009E73","#D55E00")) +
theme(axis.text.x=element_text(size=20, colour="black"),axis.text.y=element_text(size=20, colour="black"), axis.title=element_text(size=28,face="bold")) +
theme(axis.title.y = element_text(size= 28, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Number of Gobies Recollected")
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
#theme_classic() + theme(legend.position=c(0.82,0.82)) + scale_fill_discrete(limits=c("Low","Medium", "High")) +
theme(legend.key.size = unit(1.3,'line')) +
theme(legend.title=element_text(size=34) , legend.text=element_text(size=20)) + scale_fill_manual(values=c("#0072B2","#009E73","#D55E00")) +
theme(axis.text.x=element_text(size=20, colour="black"),axis.text.y=element_text(size=20, colour="black"), axis.title=element_text(size=28,face="bold")) +
theme(axis.title.y = element_text(size= 28, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Number of Gobies Recollected")
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + #theme(legend.position=c(0.82,0.82)) + scale_fill_discrete(limits=c("Low","Medium", "High")) +
theme(legend.key.size = unit(1.3,'line')) +
theme(legend.title=element_text(size=34) , legend.text=element_text(size=20)) + scale_fill_manual(values=c("#0072B2","#009E73","#D55E00")) +
theme(axis.text.x=element_text(size=20, colour="black"),axis.text.y=element_text(size=20, colour="black"), axis.title=element_text(size=28,face="bold")) +
theme(axis.title.y = element_text(size= 28, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Number of Gobies Recollected")
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + #theme(legend.position=c(0.82,0.82)) + scale_fill_discrete(limits=c("Low","Medium", "High")) +
#theme(legend.key.size = unit(1.3,'line')) +
#theme(legend.title=element_text(size=34) , legend.text=element_text(size=20))
scale_fill_manual(values=c("#0072B2","#009E73","#D55E00")) +
theme(axis.text.x=element_text(size=20, colour="black"),axis.text.y=element_text(size=20, colour="black"), axis.title=element_text(size=28,face="bold")) +
theme(axis.title.y = element_text(size= 28, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Number of Gobies Recollected")
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + theme(legend.position="none") + #scale_fill_discrete(limits=c("Low","Medium", "High")) +
#theme(legend.key.size = unit(1.3,'line')) +
#theme(legend.title=element_text(size=34) , legend.text=element_text(size=20))
scale_fill_manual(values=c("#0072B2","#009E73","#D55E00")) +
theme(axis.text.x=element_text(size=20, colour="black"),axis.text.y=element_text(size=20, colour="black"), axis.title=element_text(size=28,face="bold")) +
theme(axis.title.y = element_text(size= 28, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Number of Gobies Recollected")
library(sciplot)
library(lme4)
library(lmerTest)
library(car)
library(plyr)
library(dplyr)
library(ggplot2)
library(extrafont)
library(ggplot)
library(tidyr)
#importing raw data
#tried to make the .csv file not contain any NA's
reco.raw<-read.csv("Data/Recollections.all.trials.2.23.19.csv")
reco.wrang<-as.data.frame(reco.raw) %>%
tidyr::gather(key = Sex.recollected, value = Count,-Year, -Trial, -Trial.duration,-Reef,-Treatment,-Initial.size,-Final.size,-Initial.sex,-Growth,-Final.sex,
-Final.sex.female.transitional.equals.female,-final.Weight.g,-Deployment.day,-Immature)
reco.reef.simple<-reco.wrang %>%
group_by(Year,Trial,Reef,Treatment) %>%
summarize(Count = sum(Count))
View(reco.reef.simple)
#calculating proportion of initial population recollected
reco.reef.simple$Prop.reco<-(reco.reef.simple$Count/20)
reco.t4.5<-reco.reef.simple[(reco.reef.simple$Trial>3) & (reco.reef.simple$Trial<6), ]
df<-reco.t4.5
reco.means<-with(df, aggregate((Prop.reco), list(Treatment=Treatment), mean))
reco.means<-with(df, aggregate((Count), list(Treatment=Treatment), mean))
#now apply the se function to the 4th column [,3]
reco.means$se<-with(df, aggregate((Count), list(Treatment=Treatment), function(x) sd(x)/sqrt(length(x))))[,2]
reco.means$Treatment<-ordered(reco.means$Treatment,levels=c("Low","Medium","High"))
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + theme(legend.position="none") + #scale_fill_discrete(limits=c("Low","Medium", "High")) +
#theme(legend.key.size = unit(1.3,'line')) +
#theme(legend.title=element_text(size=34) , legend.text=element_text(size=20))
scale_fill_manual(values=c("#0072B2","#009E73","#D55E00")) +
theme(axis.text.x=element_text(size=28, colour="black"),axis.text.y=element_text(size=28, colour="black"), axis.title=element_text(size=34,face="bold")) +
theme(axis.title.y = element_text(size= 34, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Number of Gobies Recollected")
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + theme(legend.position="none") + #scale_fill_discrete(limits=c("Low","Medium", "High")) +
#theme(legend.key.size = unit(1.3,'line')) +
#theme(legend.title=element_text(size=34) , legend.text=element_text(size=20))
scale_fill_manual(values=c("#0072B2","#009E73","#D55E00")) +
theme(axis.text.x=element_text(size=26, colour="black"),axis.text.y=element_text(size=26, colour="black"), axis.title=element_text(size=32,face="bold")) +
theme(axis.title.y = element_text(size= 32, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Number of Gobies Recollected")
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + theme(legend.position="none") + #scale_fill_discrete(limits=c("Low","Medium", "High")) +
#theme(legend.key.size = unit(1.3,'line')) +
#theme(legend.title=element_text(size=34) , legend.text=element_text(size=20))
scale_fill_manual(values=c("#0072B2","#009E73","#D55E00")) +
theme(axis.text.x=element_text(size=26, colour="black"),axis.text.y=element_text(size=26, colour="black"), axis.title=element_text(size=30,face="bold")) +
theme(axis.title.y = element_text(size= 30, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Number of Gobies Recollected")
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + theme(legend.position="none") + #scale_fill_discrete(limits=c("Low","Medium", "High")) +
#theme(legend.key.size = unit(1.3,'line')) +
#theme(legend.title=element_text(size=34) , legend.text=element_text(size=20))
scale_fill_manual(values=c("#0072B2","#009E73","#D55E00")) +
theme(axis.text.x=element_text(size=25, colour="black"),axis.text.y=element_text(size=25, colour="black"), axis.title=element_text(size=30,face="bold")) +
theme(axis.title.y = element_text(size= 30, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Number of Gobies Recollected")
header()
head
library(sciplot)
library(lme4)
library(lmerTest)
library(car)
library(plyr)
library(dplyr)
library(ggplot2)
library(extrafont)
library(ggplot)
library(tidyr)
#importing raw data
#tried to make the .csv file not contain any NA's
reco.raw<-read.csv("Data/Recollections.all.trials.2.23.19.csv")
reco.wrang<-as.data.frame(reco.raw) %>%
tidyr::gather(key = Sex.recollected, value = Count,-Year, -Trial, -Trial.duration,-Reef,-Treatment,-Initial.size,-Final.size,-Initial.sex,-Growth,-Final.sex,
-Final.sex.female.transitional.equals.female,-final.Weight.g,-Deployment.day,-Immature)
library(sciplot)
library(lme4)
library(lmerTest)
library(car)
library(plyr)
library(dplyr)
library(ggplot2)
library(extrafont)
library(ggplot)
library(tidyr)
rm(list=ls())
#importing raw data
#tried to make the .csv file not contain any NA's
reco.raw<-read.csv("Data/Recollections.all.trials.2.23.19.csv")
reco.means<-with(df, aggregate((Count), list(Treatment=Treatment), mean))
reco.t4.5<-reco.reef.simple[(reco.reef.simple$Trial>3) & (reco.reef.simple$Trial<6), ]
reco.wrang<-as.data.frame(reco.raw) %>%
tidyr::gather(key = Sex.recollected, value = Count,-Year, -Trial, -Trial.duration,-Reef,-Treatment,-Initial.size,-Final.size,-Initial.sex,-Growth,-Final.sex,
-Final.sex.female.transitional.equals.female,-final.Weight.g,-Deployment.day,-Immature)
reco.reef.simple<-reco.wrang %>%
group_by(Year,Trial,Reef,Treatment) %>%
summarize(Count = sum(Count))
reco.t4.5<-reco.reef.simple[(reco.reef.simple$Trial>3) & (reco.reef.simple$Trial<6), ]
df<-reco.t4.5
reco.means<-with(df, aggregate((Count), list(Treatment=Treatment), mean))
#now apply the se function to the 4th column [,3]
reco.means$se<-with(df, aggregate((Count), list(Treatment=Treatment), function(x) sd(x)/sqrt(length(x))))[,2]
reco.means$Treatment<-ordered(reco.means$Treatment,levels=c("Low","Medium","High"))
png(filename = "Output/reco.bem.png", width = 900, height = 800)
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + theme(legend.position="none") + #scale_fill_discrete(limits=c("Low","Medium", "High")) +
#theme(legend.key.size = unit(1.3,'line')) +
#theme(legend.title=element_text(size=34) , legend.text=element_text(size=20))
scale_fill_manual(values=c("#0072B2","#009E73","#D55E00")) +
theme(axis.text.x=element_text(size=30, colour="black"),axis.text.y=element_text(size=30, colour="black"), axis.title=element_text(size=35,face="bold")) +
theme(axis.title.y = element_text(size= 35, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Gobies Recollected per Reef")
dev.off()
library(extrafont)
library(ggplot2)
library(sciplot)
library(dplyr)
library(plyr)
library(vegan)
library(psych)
library(lme4)
library(dplyr)
library(ggplot2)
library(extrafont)
library(ggplot)
library(tidyr)
library(plyr)
library(dplyr)
library(ggplot2)
library(extrafont)
library(ggplot)
library(tidyr)
#importing raw data
#tried to make the .csv file not contain any NA's
reco.raw<-read.csv("Data/Recollections.all.trials.2.23.19.csv")
reco.wrang<-as.data.frame(reco.raw) %>%
tidyr::gather(key = Sex.recollected, value = Count,-Year, -Trial, -Trial.duration,-Reef,-Treatment,-Initial.size,-Final.size,-Initial.sex,-Growth,-Final.sex,
-Final.sex.female.transitional.equals.female,-final.Weight.g,-Deployment.day,-Immature)
#importing raw data
#tried to make the .csv file not contain any NA's
reco.raw<-read.csv("Data/Recollections.all.trials.2.23.19.csv")
reco.wrang<-as.data.frame(reco.raw) %>%
tidyr::gather(key = Sex.recollected, value = Count,-Year, -Trial, -Trial.duration,-Reef,-Treatment,-Initial.size,-Final.size,-Initial.sex,-Growth,-Final.sex,
-Final.sex.female.transitional.equals.female,-final.Weight.g,-Deployment.day,-Immature)
reco.reef.simple<-reco.wrang %>%
group_by(Year,Trial,Reef,Treatment) %>%
summarize(Count = sum(Count))
reco.t4.5<-reco.reef.simple[(reco.reef.simple$Trial>3) & (reco.reef.simple$Trial<6), ]
df<-reco.t4.5
reco.means<-with(df, aggregate((Prop.reco), list(Treatment=Treatment), mean))
#importing raw data
#tried to make the .csv file not contain any NA's
reco.raw<-read.csv("Data/Recollections.all.trials.2.23.19.csv")
reco.wrang<-as.data.frame(reco.raw) %>%
tidyr::gather(key = Sex.recollected, value = Count,-Year, -Trial, -Trial.duration,-Reef,-Treatment,-Initial.size,-Final.size,-Initial.sex,-Growth,-Final.sex,
-Final.sex.female.transitional.equals.female,-final.Weight.g,-Deployment.day,-Immature)
reco.reef.simple<-reco.wrang %>%
group_by(Year,Trial,Reef,Treatment) %>%
summarize(Count = sum(Count))
#calculating proportion of initial population recollected
reco.reef.simple$Prop.reco<-(reco.reef.simple$Count/20)
#importing raw data
#tried to make the .csv file not contain any NA's
reco.raw<-read.csv("Data/Recollections.all.trials.2.23.19.csv")
reco.wrang<-as.data.frame(reco.raw) %>%
tidyr::gather(key = Sex.recollected, value = Count,-Year, -Trial, -Trial.duration,-Reef,-Treatment,-Initial.size,-Final.size,-Initial.sex,-Growth,-Final.sex,
-Final.sex.female.transitional.equals.female,-final.Weight.g,-Deployment.day,-Immature)
reco.reef<-reco.wrang %>%
group_by(Year,Trial,Reef,Treatment,Sex.recollected,Deployment.day) %>%
summarize(Count = sum(Count))
reco.reef<-reco.wrang %>%
group_by(Year,Trial,Reef,Treatment,Sex.recollected,Deployment.day) %>%
summarize(Count = sum(Count))
View(reco.reef)
#importing raw data
#tried to make the .csv file not contain any NA's
reco.raw<-read.csv("Data/Recollections.all.trials.2.23.19.csv")
reco.wrang<-as.data.frame(reco.raw) %>%
tidyr::gather(key = Sex.recollected, value = Count,-Year, -Trial, -Trial.duration,-Reef,-Treatment,-Initial.size,-Final.size,-Initial.sex,-Growth,-Final.sex,
-Final.sex.female.transitional.equals.female,-final.Weight.g,-Deployment.day,-Immature)
reco.reef<-reco.wrang %>%
group_by(Year,Trial,Reef,Treatment,Sex.recollected,Deployment.day) %>%
summarize(Count = sum(Count))
View(reco.raw)
rm(list=ls())
library(sciplot)
library(lme4)
library(lmerTest)
library(car)
library(plyr)
library(dplyr)
library(ggplot2)
library(extrafont)
library(ggplot)
library(tidyr)
#importing raw data
#tried to make the .csv file not contain any NA's
reco.raw<-read.csv("Data/Recollections.all.trials.2.23.19.csv")
reco.wrang<-as.data.frame(reco.raw) %>%
tidyr::gather(key = Sex.recollected, value = Count,-Year, -Trial, -Trial.duration,-Reef,-Treatment,-Initial.size,-Final.size,-Initial.sex,-Growth,-Final.sex,
-Final.sex.female.transitional.equals.female,-final.Weight.g,-Deployment.day,-Immature)
reco.reef<-reco.wrang %>%
group_by(Year,Trial,Reef,Treatment,Sex.recollected,Deployment.day) %>%
summarize(Count = sum(Count))
reco.reef.simple<-reco.wrang %>%
group_by(Year,Trial,Reef,Treatment) %>%
summarize(Count = sum(Count)
reco.reef.simple<-reco.wrang %>%
group_by(Year,Trial,Reef,Treatment) %>%
summarize(Count = sum(Count))
reco.wrang<-as.data.frame(reco.raw) %>%
tidyr::gather(key = Sex.recollected, value = Count,-Year, -Trial, -Trial.duration,-Reef,-Treatment,-Initial.size,-Final.size,-Initial.sex,-Growth,-Final.sex,
-Final.sex.female.transitional.equals.female,-final.Weight.g,-Deployment.day,-Immature)
reco.reef.simple<-reco.wrang %>%
group_by(Year,Trial,Reef,Treatment)
reco.reef.simple<-reco.wrang %>%
group_by(Year,Trial,Reef,Treatment) %>%
summarize(.Count = sum(Count))
reco.reef.simple<-reco.wrang %>%
group_by(Year,Trial,Reef,Treatment)
reco.reef.simple<-reco.wrang %>%
group_by(Year,Trial,Reef,Treatment) %>%
summarize(.Count = mean(Count))
