theme_classic() +
labs(x="Risk Treatment", y="Survivorship") +
theme(legend.position="none") +
scale_fill_manual(values=c("grey", "grey", "grey")) +
theme(axis.text.x=element_text(size=20, colour="black"),
axis.text.y=element_text(size=20, colour="black"),
axis.title=element_text(size=20))+
theme(axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 12, r = 0, b = 0, l = 0)),
axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(legend.text=element_text(size=18)) +
theme(legend.title =element_text(size=20))+
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0,0),limits = c(0,6.1))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial"))
dev.off()
reco.plot<- ggplot(survival, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.5, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() +
labs(x="Risk Treatment", y="Survivorship") +
theme(legend.position="none") +
scale_fill_manual(values=c("grey", "grey", "grey")) +
theme(axis.text.x=element_text(size=20, colour="black"),
axis.text.y=element_text(size=20, colour="black"),
axis.title=element_text(size=20))+
theme(axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 12, r = 0, b = 0, l = 0)),
axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(legend.text=element_text(size=18)) +
theme(legend.title =element_text(size=20))+
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0,0),limits = c(0,6.1))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial"))
reco.plot<- ggplot(survival, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.5, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() +
labs(x="Risk Treatment", y="Survivorship") +
theme(legend.position="none") +
scale_fill_manual(values=c("grey", "grey", "grey")) +
theme(axis.text.x=element_text(size=20, colour="black"),
axis.text.y=element_text(size=20, colour="black"),
axis.title=element_text(size=20))+
theme(axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 12, r = 0, b = 0, l = 0)),
axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(legend.text=element_text(size=18)) +
theme(legend.title =element_text(size=20))+
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0,0),limits = c(0,0.35))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial"))
reco.plot<- ggplot(survival, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.5, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() +
labs(x="Risk Treatment", y="Survivorship") +
theme(legend.position="none") +
scale_fill_manual(values=c("grey", "grey", "grey")) +
theme(axis.text.x=element_text(size=20, colour="black"),
axis.text.y=element_text(size=20, colour="black"),
axis.title=element_text(size=20))+
theme(axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 12, r = 0, b = 0, l = 0)),
axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(legend.text=element_text(size=18)) +
theme(legend.title =element_text(size=20))+
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0,0),limits = c(0,0.31))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial"))
png("Output/2019.11.17.survivorship.6.5x5.5.300dpi.png", width = 6.5, height = 5.5, units = 'in', res = 300)
reco.plot<- ggplot(survival, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.5, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() +
labs(x="Risk Treatment", y="Survivorship") +
theme(legend.position="none") +
scale_fill_manual(values=c("grey", "grey", "grey")) +
theme(axis.text.x=element_text(size=20, colour="black"),
axis.text.y=element_text(size=20, colour="black"),
axis.title=element_text(size=20))+
theme(axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 12, r = 0, b = 0, l = 0)),
axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(legend.text=element_text(size=18)) +
theme(legend.title =element_text(size=20))+
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0,0),limits = c(0,0.31))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial"))
dev.off()
library(lme4)
library(sciplot)
library(lme4)
library(car)
library(lmerTest)
library(dplyr)
library(ggplot2)
library(MASS)
library(nlme)
library(pwr)
library(HH)#for ancova and plots
library(vegan)
library(agricolae)#for tukey post-hoc test
#same model, but now with survivorship, instead of raw counts
mod.1s<-lmer(Survivorship ~ Treatment + (1|Trial), data=reco)
hist(resid(mod.1s))
qqnorm(resid(mod.1s))
qqline(resid(mod.1s))
anova(mod.1s)
Anova(mod.1s)
rm(list=ls())
library(sciplot)
library(lme4)
library(lmerTest)
library(dplyr)
library(ggplot2)
library(car)
library(MASS)
library(nlme)
#read data
reco<-read.csv("Data/2019.10.8.recollection.data.csv", na.strings = "")
reco<-read.csv("Data/2019.10.8.recollection.data.csv")
reco<-na.omit(reco)
#adding column for survivorship, dividing counts by 20 (initial number of fish on reefs)
reco$Survivorship<-ceiling(reco$Count/20)
#adding column for survivorship, dividing counts by 20 (initial number of fish on reefs)
reco$Survivorship<-reco$Count/20
#already have a column for year, going to make it a factor now
reco$Year.fact<- as.factor(reco$Year)
#using raw counts, including year, and trial nested within year, year as numeric
mod1<-lmer(Count~Treatment*Year.fact+(1|Year.fact:Trial), data=reco)
hist(resid(mod1))
qnorm(resid(mod1))
qqline(resid(mod1))
hist(resid(mod1))
qnorm(resid(mod1))
qqline(resid(mod1))
anova(mod1, type = "III")
Anova(mod1)
summary(mod1) #none of it is sig. can reduce model? also want to make sure I get the same result when year is run as factor
reco<-na.omit(reco)
#using raw counts, including year, and trial nested within year, year as numeric
mod1<-lmer(Count~Treatment*Year.fact+(1|Year.fact:Trial), data=reco)
hist(resid(mod1))
qnorm(resid(mod1))
qqnorm(resid(mod1))
qqline(resid(mod1))
anova(mod1, type = "III")
anova(mod1)
Anova(mod1)
summary(mod1) #none of it is sig. can reduce model? also want to make sure I get the same result when year is run as factor
ranef(mod1)
#using proportional data for survival
mod2<-lmer(Survivorship~Treatment*Year.fact+(1|Year.fact:Trial), data=reco)
hist(resid(mod2))
qqnorm(resid(mod2))
qqline(resid(mod2))
anova(mod2)
anova(mod2)
Anova(mod2)
summary(mod2) #no differences in either categorical factor, or interaction
#plotting####
#ordering treatments
reco$Treatment.ord<-ordered(reco$Treatment, levels=c("Low","Medium","High"))
reco$T6.comparison.ord<-ordered(reco$T6.comparison, levels=c("Low","Medium","High","Uncaged"))
bargraph.CI(x.factor = Treatment.ord, response = Count,
group= Year.fact, legend=TRUE, main="Recollection by treatment and year",
data = reco, ylab="Gobies Recollected")
bargraph.CI(x.factor = Treatment.ord, response = Survivorship,
group= Year.fact, legend=TRUE, main="Survivorship by treatment and year",
data = reco, ylab="Survivorship")
#using proportional data for survival
mod2<-lmer(Survivorship~Treatment*Year.fact+(1|Year.fact:Trial), data=reco)
hist(resid(mod2))
qqnorm(resid(mod2))
qqline(resid(mod2))
anova(mod2)
Anova(mod2)
anova(mod1)
Anova(mod1)
#using raw counts, including year, and trial nested within year, year as numeric
mod1<-lmer(Count~Treatment*Year.fact+(1|Year.fact:Trial), data=reco)
hist(resid(mod1))
qqnorm(resid(mod1))
qqline(resid(mod1))
anova(mod1)
#using proportional data for survival
mod2<-lmer(Survivorship~Treatment*Year.fact+(1|Year.fact:Trial), data=reco)
hist(resid(mod2))
qqnorm(resid(mod2))
qqline(resid(mod2))
anova(mod2)
Anova(mod2)
bargraph.CI(x.factor = Treatment.ord, response = Survivorship,
main="Survivorship by treatment and year",
data = reco, ylab="Survivorship")
#no year factor
bargraph.CI(x.factor = Treatment.ord, response = Survivorship,
main="Survivorship by treatment",
data = reco, ylab="Survivorship")
bargraph.CI(x.factor = Treatment.ord, response = Count,
main="Recollection by treatment",
data = reco, ylab="Gobies Recollected")
library(nlme)
options(contrasts = c("contr.sum","contr.poly")) #this is important, run before ANOVA, will set SS to type III
#read data
reco<-read.csv("Data/2019.10.8.recollection.data.csv")
reco<-na.omit(reco)
#adding column for survivorship, dividing counts by
#- 20 (initial number of fish on reefs)
reco$Survivorship<-reco$Count/20
#already have a column for year, going to make it a factor now
reco$Year.fact<- as.factor(reco$Year)
#using nlme package to model recollections
mod2.2.luk<-lme(Survivorship~Treatment*Year.fact,random=~1|Trial,reco,method="REML")
summary(mod2.2.luk)
anova(mod2.2.luk, type='marginal')
hist(resid(mod2.2.luk))
qqnorm(resid(mod2.2.luk))
qqline(resid(mod2.2.luk))
summary(mod2.2.luk)
anova(mod2.2.luk, type='marginal')
#arithmetic means for comparison and ss
library(FSA)
Summarize(Survivorship~Treatment,
data=reco,
digits=3)
library(sciplot)
library(lme4)
library(car)
library(lmerTest)
library(dplyr)
library(lmerTest)
library(dplyr)
library(ggplot2)
library(MASS)
library(nlme)
options(contrasts = c("contr.sum","contr.poly")) #this is important, run before ANOVA, will set SS to type III
#read data
reco<-read.csv("Data/2019.10.8.recollection.data.csv")
reco<-na.omit(reco)
#adding column for survivorship, dividing counts by
#- 20 (initial number of fish on reefs)
reco$Survivorship<-reco$Count/20
#already have a column for year, going to make it a factor now
reco$Year.fact<- as.factor(reco$Year)
reco.t6<-reco[reco$Trial==6,]
View(reco.t6)
#subset treatments, caged and uncaged only (T6.comparison)
reco.t6.comp<-reco[reco$T6.comparison==c("High","Control")]
#subset treatments, caged and uncaged only (T6.comparison)
reco.t6.comp<-reco[reco$T6.comparison,c(=="High",=="Control")]
#subset treatments, caged and uncaged only (T6.comparison)
reco.t6.comp<-reco[reco$T6.comparison="High"&"Control",]
#subset treatments, caged and uncaged only (T6.comparison)
reco.t6.comp<-reco[reco$T6.comparison=="High"&"Control",]
reco.t6.comp<-reco.t6[c((reco.t6.comp$T6.comparison="High") |
(reco.t6.comp$T6.comparison="Control")), ]
reco.t6.comp<-reco.t6[c((reco.t6$T6.comparison="High") |
(reco.t6$T6.comparison="Control")), ]
reco.t6.comp<-reco.t6[reco.t6$T6.comparison == "High" | reco.t6$T6.comparison == "Control", ]
#subsetting data to do t6 comparison between HR caged and uncaged treatments
#subset trial
reco.t6.test<-reco(c([reco$Trial==6,],
[reco.t6$T6.comparison == "High" | reco.t6$T6.comparison == "Control", ]))
View(reco.t6.comp)
#subsetting data to do t6 comparison between HR caged and uncaged treatments
#subset trial
reco.t6<-reco[reco$Trial==6,]
View(reco.t6)
#subsetting by multiple character factors. Awesome code!
reco.t6.comp<-reco.t6[reco.t6$T6.comparison = "High" | reco.t6$T6.comparison = "Control", ]
#subsetting by multiple character factors. Awesome code!
reco.t6.comp<-reco.t6[reco.t6$T6.comparison == "High" | reco.t6$T6.comparison == "Control", ]
View(reco.t6.comp)
library(sciplot)
library(lme4)
library(car)
library(lmerTest)
library(dplyr)
library(ggplot2)
library(MASS)
library(nlme)
options(contrasts = c("contr.sum","contr.poly")) #this is important, run before ANOVA, will set SS to type III
#read data
reco<-read.csv("Data/2019.10.8.recollection.data.csv")
reco<-na.omit(reco)
#adding column for survivorship, dividing counts by
#- 20 (initial number of fish on reefs)
reco$Survivorship<-reco$Count/20
#already have a column for year, going to make it a factor now
reco$Year.fact<- as.factor(reco$Year)
#subsetting data to do t6 comparison between HR caged and uncaged treatments
#subset trial
repro.t6<-repro[repro$Trial==6,]
#subsetting data to do t6 comparison between HR caged and uncaged treatments
#subset trial
reco.t6<-reco[reco$Trial==6,]
#subsetting by multiple character factors within a variable. Awesome code!
reco.t6.comp<-reco.t6[reco$T6.comparison == "High" | reco.t6$T6.comparison == "Control", ]
#subsetting by multiple character factors within a variable. Awesome code!
reco.t6.comp<-reco.t6[reco.t6$T6.comparison == "High" | reco.t6$T6.comparison == "Control", ]
View(reco.t6.comp)
options(contrasts = c("contr.sum","contr.poly")) #this is important, run before ANOVA, will set SS to type III
#full model
modt6.luk<-lm(Survivorship~T6.comparison,data=reco.t6.comp)
summary(modt6.luk)
anova(modt6.luk)
library(lme4)
library(lmerTest)
library(dplyr)
library(ggplot2)
library(emmeans) #for generating least-squares adjusted means from models
options(contrasts = c("contr.sum","contr.poly")) #this is important, run before ANOVA, will set SS to type III
#import dataset###
reco<-read.csv("Data/2019.10.8.recollection.data.csv")
reco<-na.omit(reco)
#adding column for survivorship, dividing counts by
#- 20 (initial number of fish on reefs)
reco$Survivorship<-reco$Count/20
#already have a column for year, going to make it a factor now
reco$Year.fact<- as.factor(reco$Year)
reco$Trial.fact<-as.factor(reco$Trial)
View(reco.t6.comp)
#subset treatments, caged and uncaged only (T6.comparison)
#subsetting by multiple character factors within a variable. Awesome code!
reco.t6.comp<-reco.t6[reco.t6$T6.comparison == "High" | reco.t6$T6.comparison == "Control", ]
#subsetting data from trial 6 to compare recollections between HR caged and uncaged treatments
reco.t6<-reco[reco$Trial==6,]
#subset treatments, caged and uncaged only (T6.comparison)
#subsetting by multiple character factors within a variable. Awesome code!
reco.t6.comp<-reco.t6[reco.t6$T6.comparison == "High" | reco.t6$T6.comparison == "Control", ]
View(reco.t6.comp)
#import dataset###
reco<-read.csv("Data/2019.10.8.recollection.data.csv")
reco<-na.omit(reco)
#adding column for survivorship, dividing recollections by 20 (initial number of fish on reefs)
reco$Survivorship<-reco$Count/20
#subsetting data from trial 6 to compare recollections between HR caged and uncaged treatments
reco.t6<-reco[reco$Trial==6,]
#subset treatments, caged and uncaged only (T6.comparison)
#subsetting by multiple character factors within a variable. Awesome code!
reco.t6.comp<-reco.t6[reco.t6$T6.comparison == "High" | reco.t6$T6.comparison == "Control", ]
View(reco.t6.comp)
View(reco.t6.comp)
#changing trial and year to factors
reco$Trial<- as.factor(reco$Trial)
reco$Year.fact<- as.factor(reco$Year)
# 1a. all trials ####
# full model
re<-lmer(Survivorship ~ Treatment*Year + (1|Trial) + (1|Treatment:Trial), REML=F, reco)
reco$Year<- as.factor(reco$Year)
# 1a. all trials ####
# full model
re<-lmer(Survivorship ~ Treatment*Year + (1|Trial) + (1|Treatment:Trial), REML=F, reco)
hist(resid(re))
qqnorm(resid(re))
qqline(resid(re))
plot(re)
summary(re)
anova(re)
#removing two-way interaction of random effect
re2<-update(re, .~. -(1|Treatment:Trial))
summary(re2)
anova(re2)
anova(re,re2) #no difference in models when three-way interaction with random intercept is removed
# - trial
re3<-update(re2, .~. -(1|Trial))
# - trial
re3<-update(re, .~. -(1|Trial))
summary(re3)
anova(re3)
anova(re3, re2)
anova(re3, re)
anova(re,re2) #no difference in models when two-way interaction with random intercept is removed, taking it out
# - trial
re3<-update(re, .~. -(1|Trial))
summary(re3)
anova(re3)
anova(re3, re)
summary(re3)
summary(re) #no extra variance explained by random effect of treatment x trial
anova(re3, re) #there were differences by trial, but not the important factor here,
# - treatment:year
re4<- update(re2, .~. -(Treatment:Year))
# - treatment:year
re4<- update(re2, .~. -(Treatment:Year))
summary(re4)
anova(re4)
anova(re4, re2)
# - year, can't also have the interaction term of treatment:year, so working from re4
re5<- update(re4, .~. -(Year))
summary(re5)
anova(re5)
anova(re5, re4)
# - treatment, working off of re4 for same reason as before
re6<- update(re4, .~. -(Treatment))
summary(re6)
anova(re6)
anova(re6, re4)
reco<-as_tibble(reco)
reco
head(reco.t6.comp)
t6.comp<-reco.t6.comp %>% gather(T6.comparison, Survivorship, Year:Survivorship)
library(lme4)
library(lmerTest)
library(dplyr)
library(ggplot2)
library(emmeans) #for generating least-squares adjusted means from models
library(tidyverse)
t6.comp<-reco.t6.comp %>% gather(T6.comparison, Survivorship, Year:Survivorship)
View(t6.comp)
head(reco.t6.comp)
t6.comp<-reco.t6.comp %>% select(T6.comparison,Survivorship) %>%
gather(Treatment, Survivorship, T6.comparison:Survivorship)
View(t6.comp)
t6.comp<-reco.t6.comp %>% select(T6.comparison,Survivorship)
View(t6.comp)
reco.t6.comp<-as_tibble(reco.t6.comp)
reco.t6.comp
t6.comp<-reco.t6.comp %>% select(T6.comparison,Survivorship) %>%
gather(Treatment, Survivorship, T6.comparison:Survivorship)
t6.comp<-reco.t6.comp %>% select(T6.comparison,Survivorship) %>%
gather(Treatment, Survivorship, Treatment:Survivorship)
t6.comp<-reco.t6.comp %>% select(T6.comparison,Survivorship) %>%
gather(Treatment, Survivorship, T6.comparison:Survivorship)
t6.comp<-reco.t6.comp %>% select(T6.comparison,Survivorship) %>%
gather(T6.comparison, Survivorship, T6.comparison:Survivorship)
View(reco.t6.comp)
View(reco.t6.comp)
t6.comp<-reco.t6.comp %>% select(T6.comparison,Survivorship) %>%
gather(cases, T6.comparison, Survivorship, T6.comparison:Survivorship)
View(t6.comp)
t6.comp<-reco.t6.comp %>% select(T6.comparison,Survivorship) %>%
spread(T6.comparison,Survivorship)
View(t6.comp)
view(reco)
view(reco.t6
view(reco.t6.comp)
t6.comp<-reco.t6.comp %>% pivot_wider(names_from = T6.comparison, values_from = Survivorship)
View(t6.comp)
#exporting data, then reimporting back into R
write.csv(t6.comp,"Data\\2020_24_5_recollections_t6_comp", row.names = FALSE)
#exporting data, then reimporting back into R
write.csv(t6.comp,"Data\\2020_24_5_recollections_t6_comp.csv", row.names = FALSE)
t6.comp.wrangledd<- read.csv("Data\2020_24_5_recollections_t6_comp.csv")
t6.comp.wrangledd<- read.csv("Data\\2020_24_5_recollections_t6_comp.csv")
t6.comp.wrangled<- read.csv("Data\\2020_24_5_recollections_t6_comp.csv")
View(t6.comp.wrangled)
t.test(t6.comp.wrangled$Control,t6.comp.wrangled$High)
survival<-with(reco, aggregate((Survivorship), list(Treatment=Treatment), mean))
survival$se<-with(reco, aggregate((Survivorship), list(Treatment=Treatment), function(x) sd(x)/sqrt(length(x))))[,2]
reco.plot<- ggplot(survival, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.5, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() +
labs(x="Risk Treatment", y="Survivorship") +
theme(legend.position="none") +
scale_fill_manual(values=c("grey", "grey", "grey")) +
theme(axis.text.x=element_text(size=20, colour="black"),
axis.text.y=element_text(size=20, colour="black"),
axis.title=element_text(size=20))+
theme(axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 12, r = 0, b = 0, l = 0)),
axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(legend.text=element_text(size=18)) +
theme(legend.title =element_text(size=20))+
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0,0),limits = c(0,0.31),
labels = scales::number_format(accuracy = 0.01))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial"))
t.test(t6.comp.wrangled$Control,t6.comp.wrangled$High)
View(t6.comp.wrangled)
#final model is re2 (Survivorship ~ Treatment*Year + (1|Trial))
# means for survival from final model
#me8 is the final model that I will likely end up with (those are all of the fixed and random factors that I'm interested in)
hist(resid(re2))#not bad
#LS-adjusted means from model
emmeans(re2, pairwise~Treatment) #warning message re: interactions, but I think it's okay
boxplot(Survivorship~Treatment,data=reco)# variances don't look too bad, and medians look pretty good to me (i.e. match up with LS-means for the most part)
library(lme4)
library(lmerTest)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(emmeans) #for generating least-squares adjusted means from models
options(contrasts = c("contr.sum","contr.poly")) #this is important, run before ANOVA, will set SS to type III
# import dataset ####
reco<-read.csv("Data/2019.10.8.recollection.data.csv")
#adding column for survivorship, dividing recollections by 20 (initial number of fish on reefs)
reco$Survivorship<-reco$Count/20
#changing trial and year to factors
reco$Trial<- as.factor(reco$Trial)
reco$Year<- as.factor(reco$Year)
#subsetting data from trial 6 to compare recollections between HR caged and uncaged treatments
reco.t6<-reco[reco$Trial==6,]
#subset treatments, caged and uncaged only (T6.comparison)
#subsetting by multiple character factors within a variable. Awesome code!
reco.t6.comp<-reco.t6[reco.t6$T6.comparison == "High" | reco.t6$T6.comparison == "Control", ]
reco.t6.comp<-as_tibble(reco.t6.comp)
t6.comp<-reco.t6.comp %>% pivot_wider(names_from = T6.comparison, values_from = Survivorship)
t6.comp.wrangled<- read.csv("Data\\2020_24_5_recollections_t6_comp.csv")
# 1a. All trials ####
# full model
re<-lmer(Survivorship ~ Treatment*Year + (1|Trial) + (1|Treatment:Trial), REML=F, reco)
hist(resid(re))
summary(re) #no extra variance explained by random effect of treatment x trial
#removing two-way interaction of random effect
re2<-update(re, .~. -(1|Treatment:Trial))
summary(re2)
anova(re2)
t.test(t6.comp.wrangled$Control,t6.comp.wrangled$High)
