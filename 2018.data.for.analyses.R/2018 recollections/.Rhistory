labs(x="Risk Treatment", y="Proportion of Gobies Recollected")
dev.off()
png(filename = "Output/reco.t.6.png", width = 700, height = 800)
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High","Control"))+
theme_classic() + theme(legend.position="none") + #scale_fill_discrete(limits=c("Low","Medium", "High")) +
#theme(legend.key.size = unit(1.3,'line')) +
#theme(legend.title=element_text(size=34) , legend.text=element_text(size=20))
scale_fill_manual(values=c("#0072B2","#009E73","#D55E00","#35274A")) +
theme(axis.text.x=element_text(size=32, colour="black"),axis.text.y=element_text(size=32, colour="black"), axis.title=element_text(size=37,face="bold")) +
theme(axis.title.y = element_text(size= 37, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0),labels = scales::number_format(accuracy = 0.1))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Proportion of Gobies Recollected")
dev.off()
png(filename = "Output/reco.t.6.thesis.png", width = 700, height = 800)
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High","Control"))+
theme_classic() + theme(legend.position="none") + #scale_fill_discrete(limits=c("Low","Medium", "High")) +
#theme(legend.key.size = unit(1.3,'line')) +
#theme(legend.title=element_text(size=34) , legend.text=element_text(size=20))
scale_fill_manual(values=c("#0072B2","#009E73","#D55E00","#35274A")) +
theme(axis.text.x=element_text(size=32, colour="black"),axis.text.y=element_text(size=32, colour="black"), axis.title=element_text(size=37,face="bold")) +
theme(axis.title.y = element_text(size= 37, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0),limits=c(0,0.4))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Proportion of Gobies Recollected")
dev.off()
df<-reco.t1.2.3
#trials 1-5 (only three treatment levels)
reco.means<-with(df, aggregate((Prop.reco), list(Treatment=Treatment), mean))
#now apply the se function to the 4th column [,3]
reco.means$se<-with(df, aggregate((Prop.reco), list(Treatment=Treatment), function(x) sd(x)/sqrt(length(x))))[,2]
reco.means$Treatment<-ordered(reco.means$Treatment,levels=c("Low","Medium","High"))
png(filename = "Output/reco.t.1.2.3.png", width = 700, height = 800)
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + theme(legend.position="none") + #scale_fill_discrete(limits=c("Low","Medium", "High")) +
#theme(legend.key.size = unit(1.3,'line')) +
#theme(legend.title=element_text(size=34) , legend.text=element_text(size=20))
scale_fill_manual(values=c("#0072B2","#009E73","#D55E00")) +
theme(axis.text.x=element_text(size=32, colour="black"),axis.text.y=element_text(size=32, colour="black"), axis.title=element_text(size=37,face="bold")) +
theme(axis.title.y = element_text(size= 37, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0),limits = c(0,0.4))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Proportion of Gobies Recollected")
dev.off()
df<-reco.t4.5
#trials 1-5 (only three treatment levels)
reco.means<-with(df, aggregate((Prop.reco), list(Treatment=Treatment), mean))
#now apply the se function to the 4th column [,3]
reco.means$se<-with(df, aggregate((Prop.reco), list(Treatment=Treatment), function(x) sd(x)/sqrt(length(x))))[,2]
reco.means$Treatment<-ordered(reco.means$Treatment,levels=c("Low","Medium","High"))
png(filename = "Output/reco.t.4.5.png", width = 700, height = 800)
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + theme(legend.position="none") + #scale_fill_discrete(limits=c("Low","Medium", "High")) +
#theme(legend.key.size = unit(1.3,'line')) +
#theme(legend.title=element_text(size=34) , legend.text=element_text(size=20))
scale_fill_manual(values=c("#0072B2","#009E73","#D55E00")) +
theme(axis.text.x=element_text(size=32, colour="black"),axis.text.y=element_text(size=32, colour="black"), axis.title=element_text(size=37,face="bold")) +
theme(axis.title.y = element_text(size= 37, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0),limits = c(0,0.4))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Proportion of Gobies Recollected")
dev.off()
reco.means
png(filename = "Output/reco.t.4.5.png", width = 700, height = 800)
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + theme(legend.position="none") + #scale_fill_discrete(limits=c("Low","Medium", "High")) +
#theme(legend.key.size = unit(1.3,'line')) +
#theme(legend.title=element_text(size=34) , legend.text=element_text(size=20))
scale_fill_manual(values=c("#0072B2","#009E73","#D55E00")) +
theme(axis.text.x=element_text(size=32, colour="black"),axis.text.y=element_text(size=32, colour="black"), axis.title=element_text(size=37,face="bold")) +
theme(axis.title.y = element_text(size= 37, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0),limits = c(0,0.45))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Proportion of Gobies Recollected")
dev.off()
df<-reco.t1.2.3
#trials 1-5 (only three treatment levels)
reco.means<-with(df, aggregate((Prop.reco), list(Treatment=Treatment), mean))
#now apply the se function to the 4th column [,3]
reco.means$se<-with(df, aggregate((Prop.reco), list(Treatment=Treatment), function(x) sd(x)/sqrt(length(x))))[,2]
reco.means$Treatment<-ordered(reco.means$Treatment,levels=c("Low","Medium","High"))
png(filename = "Output/reco.t.1.2.3.png", width = 700, height = 800)
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High"))+
theme_classic() + theme(legend.position="none") + #scale_fill_discrete(limits=c("Low","Medium", "High")) +
#theme(legend.key.size = unit(1.3,'line')) +
#theme(legend.title=element_text(size=34) , legend.text=element_text(size=20))
scale_fill_manual(values=c("#0072B2","#009E73","#D55E00")) +
theme(axis.text.x=element_text(size=32, colour="black"),axis.text.y=element_text(size=32, colour="black"), axis.title=element_text(size=37,face="bold")) +
theme(axis.title.y = element_text(size= 37, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0),limits = c(0,0.45))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Proportion of Gobies Recollected")
dev.off()
df<-reco.t6
#trial 6
reco.means<-with(df, aggregate((Prop.reco), list(Treatment=Treatment), mean))
#now apply the se function to the 4th column [,3]
reco.means$se<-with(df, aggregate((Prop.reco), list(Treatment=Treatment), function(x) sd(x)/sqrt(length(x))))[,2]
reco.means<-with(df, aggregate((Prop.reco), list(Treatment=Treatment), mean))
#reco.means
#now apply the se function to the 4th column [,3]
reco.means$se<-with(df, aggregate((Prop.reco), list(Treatment=Treatment), function(x) sd(x)/sqrt(length(x))))[,2]
#reco.means
reco.means$Treatment<-ordered(reco.means$Treatment,levels=c("Low","Medium","High","Control"))
png(filename = "Output/reco.t.6.thesis.png", width = 700, height = 800)
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High","Control"))+
theme_classic() + theme(legend.position="none") + #scale_fill_discrete(limits=c("Low","Medium", "High")) +
#theme(legend.key.size = unit(1.3,'line')) +
#theme(legend.title=element_text(size=34) , legend.text=element_text(size=20))
scale_fill_manual(values=c("#0072B2","#009E73","#D55E00","#899DA4")) +
theme(axis.text.x=element_text(size=32, colour="black"),axis.text.y=element_text(size=32, colour="black"), axis.title=element_text(size=37,face="bold")) +
theme(axis.title.y = element_text(size= 37, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0),limits=c(0,0.45))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Proportion of Gobies Recollected")
dev.off()
#models
mod1<-lm(Count~Treatment,data=df)
hist(resid(mod1))#not normal
qqnorm(resid(mod1))
qqline(resid(mod1))
anova(mod1)
boxplot(Prop.reco~Treatment,data=df)
#models
mod1<-lm(Prop.reco~Treatment,data=df)
hist(resid(mod1))#not normal
qqnorm(resid(mod1))
qqline(resid(mod1))
anova(mod1)
df<-reco.t4.5
#models
mod1<-lm(Prop.reco~Treatment,data=df)
hist(resid(mod1))#not normal
qqnorm(resid(mod1))
qqline(resid(mod1))
anova(mod1)
boxplot(Prop.reco~Treatment,data=df)
df<-reco.t6
df<-reco.t1.2.3
#models
mod1<-lm(Prop.reco~Treatment,data=df)
hist(resid(mod1))#not normal
qqnorm(resid(mod1))
qqline(resid(mod1))
anova(mod1)
boxplot(Prop.reco~Treatment,data=df)
library(sciplot)
library(lme4)
library(lmerTest)
library(car)
library(plyr)
library(dplyr)
library(ggplot2)
library(extrafont)
library(tidyr)
library(wesanderson)
#importing raw data
#tried to make the .csv file not contain any NA's
reco.raw<-read.csv("Data/Recollections.all.trials.2.23.19.csv")
reco.wrang<-as.data.frame(reco.raw) %>%
tidyr::gather(key = Sex.recollected, value = Count,-Year, -Trial, -Trial.duration,-Reef,-Treatment,-Initial.size,-Final.size,-Initial.sex,-Growth,-Final.sex,
-Final.sex.female.transitional.equals.female,-final.Weight.g,-Deployment.day,-Immature)
reco.reef.simple<-reco.wrang %>%
group_by(Year,Trial,Reef,Treatment) %>%
summarize(Count = sum(Count))
#calculating proportion of initial population recollected
reco.reef.simple$Prop.reco<-(reco.reef.simple$Count/20)
reco.t6<-reco.reef.simple[reco.reef.simple$Trial==6,]
df<-reco.t6
#trial 6
reco.means<-with(df, aggregate((Prop.reco), list(Treatment=Treatment), mean))
#reco.means
#now apply the se function to the 4th column [,3]
reco.means$se<-with(df, aggregate((Prop.reco), list(Treatment=Treatment), function(x) sd(x)/sqrt(length(x))))[,2]
#reco.means
reco.means$Treatment<-ordered(reco.means$Treatment,levels=c("Low","Medium","High","Control"))
png(filename = "Output/reco.t.6.defense.png", width = 800, height = 600)
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High","Control"))+
theme_classic() + theme(legend.position="none") + #scale_fill_discrete(limits=c("Low","Medium", "High")) +
#theme(legend.key.size = unit(1.3,'line')) +
#theme(legend.title=element_text(size=34) , legend.text=element_text(size=20))
scale_fill_manual(values=c("#0072B2","#009E73","#D55E00","#35274A")) +
theme(axis.text.x=element_text(size=32, colour="black"),axis.text.y=element_text(size=32, colour="black"), axis.title=element_text(size=37,face="bold")) +
theme(axis.title.y = element_text(size= 37, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Proportion of Gobies Recollected")
dev.off()
png(filename = "Output/reco.t.6.defense.png", width = 800, height = 700)
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High","Control"))+
theme_classic() + theme(legend.position="none") + #scale_fill_discrete(limits=c("Low","Medium", "High")) +
#theme(legend.key.size = unit(1.3,'line')) +
#theme(legend.title=element_text(size=34) , legend.text=element_text(size=20))
scale_fill_manual(values=c("#0072B2","#009E73","#D55E00","#35274A")) +
theme(axis.text.x=element_text(size=32, colour="black"),axis.text.y=element_text(size=32, colour="black"), axis.title=element_text(size=37,face="bold")) +
theme(axis.title.y = element_text(size= 37, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Proportion of Gobies Recollected")
dev.off()
png(filename = "Output/reco.t.6.defense.png", width = 800, height = 700)
reco.plot<- ggplot(reco.means, aes(x=Treatment, y=x, fill=Treatment)) +
geom_bar(stat="identity", colour= "black", width = 0.85, position="dodge")+
scale_x_discrete(limits=c("Low","Medium","High","Control"))+
theme_classic() + theme(legend.position="none") + #scale_fill_discrete(limits=c("Low","Medium", "High")) +
#theme(legend.key.size = unit(1.3,'line')) +
#theme(legend.title=element_text(size=34) , legend.text=element_text(size=20))
scale_fill_manual(values=c("#0072B2","#009E73","#D55E00","#899DA4")) +
theme(axis.text.x=element_text(size=32, colour="black"),axis.text.y=element_text(size=32, colour="black"), axis.title=element_text(size=37,face="bold")) +
theme(axis.title.y = element_text(size= 37, margin = margin(t = 0, r = 20, b = 0, l = 0)), axis.title.x = element_text(margin = margin(t = 25, r = 0, b = 0, l = 0)), axis.text.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
theme(axis.ticks.x = element_blank()) + scale_y_continuous(expand = c(0, 0))
reco.plot + geom_linerange(aes(ymin=x-se, ymax=x+se), size=0.5,
position=position_dodge(.85)) + theme(text = element_text(family="Arial")) +
labs(x="Risk Treatment", y="Proportion of Gobies Recollected")
dev.off()
ry(sciplot)
library(lme4)
library(lmerTest)
library(car)
library(plyr)
library(dplyr)
library(ggplot2)
library(extrafont)
library(tidyr)
library(wesanderson)
library(sciplot)
library(lme4)
library(lmerTest)
library(car)
library(plyr)
library(dplyr)
library(ggplot2)
library(extrafont)
library(tidyr)
library(wesanderson)
#importing raw data
#tried to make the .csv file not contain any NA's
reco.raw<-read.csv("Data/Recollections.all.trials.2.23.19.csv")
reco.wrang<-as.data.frame(reco.raw) %>%
tidyr::gather(key = Sex.recollected, value = Count,-Year, -Trial, -Trial.duration,-Reef,-Treatment,-Initial.size,-Final.size,-Initial.sex,-Growth,-Final.sex,
-Final.sex.female.transitional.equals.female,-final.Weight.g,-Deployment.day,-Immature)
View(re
reco.reef.simple<-reco.wrang %>%
group_by(Year,Trial,Reef,Treatment) %>%
summarize(Count = sum(Count))
#calculating proportion of initial population recollected
reco.reef.simple$Prop.reco<-(reco.reef.simple$Count/20)
#subsetting by trial
reco.t1.2.3<-reco.reef.simple[reco.reef.simple$Trial<4,]
reco.t4.5<-reco.reef.simple[(reco.reef.simple$Trial>3) & (reco.reef.simple$Trial<6), ]
reco.t6<-reco.reef.simple[reco.reef.simple$Trial==6,]
#2017
# trial as fixed factor
mod1<-lm(Prop.reco~Treatment*Trial,data=reco.t1.2.3)
hist(resid(mod1))
qqnorm(resid(mod1))
qqline(resid(mod1))
anova(mod1) #higher recollections in trial 3, but equal recollections
# within each trial, regardless of treatment
boxplot(Prop.reco~Treatment*Trial,data=reco.t1.2.3)
#2018.t.4.5
# trial as fixed factor
mod2<-lm(Prop.reco~Treatment*Trial, data=reco.t4.5)
hist(resid(mod2))
qqnorm(resid(mod2))
qqline(resid(mod2))
plot(mod2)
anova(mod2)
boxplot(Prop.reco~Treatment*Trial,data=reco.t4.5) #as shown here
#2018.t.4.5
# trial as fixed factor
mod2<-glm(Prop.reco~Treatment*Trial,family = gamma, data=reco.t4.5)
#2018.t.4.5
# trial as fixed factor
mod2<-glm(Prop.reco~Treatment*Trial,family = Gamma(link="inverse"), data=reco.t4.5)
mod2<-glm(log(Prop.reco+1)~Treatment*Trial,family = Gamma(link="inverse"), data=reco.t4.5)
mod2<-glm((log(Prop.reco+1))~Treatment*Trial,family = Gamma(link="inverse"), data=reco.t4.5)
mod2<-glm((log(Prop.reco)+1)~Treatment*Trial,family = Gamma(link="inverse"), data=reco.t4.5)
mod2<-glm(Prop.reco~Treatment*Trial,family = Gamma(link="inverse"), data=reco.t4.5)
mod2<-glm(Prop.reco~Treatment*Trial, data=reco.t4.5)
hist(resid(mod2))
qqnorm(resid(mod2))
qqline(resid(mod2))
plot(mod2)
anova(mod2)
mod2<-lm(Prop.reco~Treatment*Trial, data=reco.t4.5)
hist(resid(mod2))
qqnorm(resid(mod2))
qqline(resid(mod2))
plot(mod2)
anova(mod2)
mod3<-lm(Prop.reco~Treatment,data=reco.t6)
hist(resid(mod3))#not normal
qqnorm(resid(mod3))
qqline(resid(mod3))
anova(mod3)
Anova(mod3)
mod3<-glm(Count~Treatment,family=poisson,data=reco.t6)
hist(resid(mod3))#not normal
qqnorm(resid(mod3))
qqline(resid(mod3))
anova(mod3)
Anova(mod3)
boxplot(Prop.reco~Treatment, data=reco.t6)
mod3<-lm(Count~Treatment,data=reco.t6)
hist(resid(mod3))#not normal
qqnorm(resid(mod3))
qqline(resid(mod3))
anova(mod3)
Anova(mod3)
library(sciplot)
library(lme4)
library(car)
library(lmerTest)
library(dplyr)
library(ggplot2)
library(MASS)
library(nlme)
library(pwr)
library(HH)#for ancova and plots
library(vegan)
library(agricolae)#for tukey post-hoc test
#importing dataset, adding number of gobies on each reef, ordering treatments####
#includes a column ("Treatment") where uncaged and HR are coded as "High"
#also includes a column ("T6.comparison") where uncaged and high are separated
reco<-read.csv("Data/2019.10.8.recollection.data.csv", na.strings = "")
mod.1<-lmer(Count ~ Treatment + (1|Trial), data=reco)
hist(resid(mod.1))
qqnorm(resid(mod.1))
qqline(resid(mod.1))
anova(mod.1)
Anova(mod.1)
#think I should go with this model, but will see what M. Steele has to say
mod.1p<-glmer(Count ~ Treatment + (1|Trial),family=poisson, data=reco)
hist(resid(mod.1p))
qqnorm(resid(mod.1p))
qqline(resid(mod.1p))
anova(mod.1p)
Anova(mod.1p)
summary(mod.1p)
#think I should go with this model, but will see what M. Steele has to say
mod.1p<-glmer(Count ~ Treatment + (1|Trial),family=poisson, data=reco)
hist(resid(mod.1p))
qqnorm(resid(mod.1p))
qqline(resid(mod.1p))
anova(mod.1p)
Anova(mod.1p)
summary(mod.1p)
#chi-squared shows an effect of treatment, showing more fish seen in HR/uncaged treament
fixed.effects(mod.1p)
ranef(mod.1p)
View(reco)
#subsetting T6 only for comparison
reco.T6<-reco[c(91:110),c(1:6)]
#trial 6 only, poisson dist
mod.t6p<-glmer(Count ~ T6.comparison + (1|Trial),family = poisson, data=reco)
hist(resid(mod.t6p))
qqnorm(resid(mod.t6p))
qqline(resid(mod.t6p))
anova(mod.t6p)
Anova(mod.t6p)
summary(mod.t6p)
fixed.effects(mod.t6p)
ranef(mod.t6p)
qqnorm(resid(mod.1p))
qqline(resid(mod.1p))
#importing dataset, adding number of gobies on each reef, ordering treatments####
#includes a column ("Treatment") where uncaged and HR are coded as "High"
#also includes a column ("T6.comparison") where uncaged and high are separated
reco<-read.csv("Data/2019.10.8.recollection.data.csv", na.strings = "")
#subsetting T6 only for comparison
reco.T6<-reco[c(91:110),c(1:6)]
mod.1<-lmer(Count ~ Treatment + (1|Trial), data=reco)
hist(resid(mod.1))
qqnorm(resid(mod.1))
qqline(resid(mod.1))
anova(mod.1)
Anova(mod.1)
#poisson distribution looks much better for recollections, in terms of assumptions
#think I should go with this model, but will see what M. Steele has to say
mod.1p<-glmer(Count ~ Treatment + (1|Trial),family=poisson, data=reco)
hist(resid(mod.1p))
qqnorm(resid(mod.1p))
qqline(resid(mod.1p))
anova(mod.1p)
Anova(mod.1p)
summary(mod.1p)
fixed.effects(mod.1p)
ranef(mod.1p)
#trial 6 only, poisson dist
mod.t6p<-glmer(Count ~ T6.comparison + (1|Trial),family = poisson, data=reco.T6)
#trial 6 only, poisson dist, no need to use mixed model
mod.t6p<-glm(Count ~ T6.comparison,family = poisson, data=reco.T6)
hist(resid(mod.t6p))
qqnorm(resid(mod.t6p))
qqline(resid(mod.t6p))
anova(mod.t6p)
Anova(mod.t6p)
summary(mod.t6p)
fixed.effects(mod.t6p)
ranef(mod.t6p)
# trial 6 only, normal distribution
mod.t6<-lm(Count ~ T6.comparison, data=reco.T6)
# trial 6 only, normal distribution
mod.t6<-lm(Count ~ T6.comparison, data=reco.T6)
hist(resid(mod.t6))
qqnorm(resid(mod.t6))
qqline(resid(mod.t6))#looks skewed
anova(mod.t6)
#no sig. difference among treatments
summary(mod.t6)
#trial as a fixed factor
mod.1f<-lm(Count ~ Treatment*Trial, data=reco)
hist(resid(mod.1f))
qqnorm(resid(mod.1f))
qqline(resid(mod.1f))
anova(mod.1f)
Anova(mod.1f)
#fixed, poiss distribution
mod.1fp<-lm(Count ~ Treatment*Trial, data=reco)
hist(resid(mod.1fp))
qqnorm(resid(mod.1fp))
qqline(resid(mod.1fp))
#fixed, poiss distribution
mod.1fp<-lmer(Count ~ Treatment*Trial,family=poisson, data=reco)
#fixed, poiss distribution
mod.1fp<-glm(Count ~ Treatment*Trial,family=poisson, data=reco)
hist(resid(mod.1fp))
qqnorm(resid(mod.1fp))
qqline(resid(mod.1fp))
anova(mod.1fp)
Anova(mod.1fp)
#importing dataset, adding number of gobies on each reef, ordering treatments####
#includes a column ("Treatment") where uncaged and HR are coded as "High"
#also includes a column ("T6.comparison") where uncaged and high are separated
reco<-read.csv("Data/2019.10.8.recollection.data.csv", na.strings = "")
reco<-read.csv("Data/2019.10.8.recollection.data.csv")
reco<-read.csv("Data/2019.10.8.recollection.data.csv")
#trial as a fixed factor, normal distribution
mod.1f<-lm(Count ~ Treatment*Trial, data=reco)
hist(resid(mod.1f))
qqnorm(resid(mod.1f))
qqline(resid(mod.1f))
anova(mod.1f)
Anova(mod.1f)
library(sciplot)
library(lme4)
library(car)
library(lmerTest)
library(dplyr)
library(ggplot2)
library(MASS)
library(nlme)
library(pwr)
library(HH)#for ancova and plots
library(vegan)
library(agricolae)#for tukey post-hoc test
#poisson distribution looks much better for recollections, in terms of assumptions
#think I should go with this model, but will see what M. Steele has to say
mod.1p<-glmer(Count ~ Treatment + (1|Trial),family=poisson, data=reco)
hist(resid(mod.1p))
qqnorm(resid(mod.1p))
qqline(resid(mod.1p))
anova(mod.1p)
Anova(mod.1p)
summary(mod.1p)
fixed.effects(mod.1p)
ranef(mod.1p)
#no grouping factor
bargraph.CI(x.factor = Treatment, response = Count,
legend=TRUE, main="recollections, all trials pooled",
data = reco)
bargraph.CI(x.factor = T6.comparison, response = Count,
legend=TRUE, main="recollections, all trials pooled",
data = reco)
#no grouping factor
bargraph.CI(x.factor = Treatment, response = Count,
legend=TRUE, main="recollections, all trials pooled",
data = reco)
#subsetting T6 only for comparison
reco.T6<-reco[c(91:110),c(1:6)]
#recollections including distinction between control and high risk, just for trial 6
bargraph.CI(x.factor = T6.comparison, response = Count,
legend=TRUE, main="recollections, all trials pooled",
data = reco.T6)
